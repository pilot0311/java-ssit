1. 30명 학생의 성적처리 ( 이름, 국,영,수, 총,평, 등수 )
  ㄱ. 입력  
private static int getScore() {

		return (int) (Math.random() * 101);
	}

	private static String getName() {
		Random rnd = new Random();
		char[] nameArr = new char[3];
		for (int i = 0; i < nameArr.length; i++) {
			nameArr[i] = (char) (rnd.nextInt('힣' - '가' + 1) + '가');
		} // for
		String name = String.valueOf(nameArr);
		return name;
	}
  ㄴ. 등수처리
private static void rankUp(double[] avgs, int[] ranks, int count) {
		for (int i = 0; i < count; i++) {
			for (int j = 0; j < count; j++) {
				if (avgs[i] < avgs[j])
					ranks[i]++;
			} // for
		} // for
	}
  ㄷ. 출력
  private static void pirntScore(String[] names, int[] kors, int[] engs, int[] mats, int[] tots, double[] avgs,
			int[] ranks, int count) {
		System.out.println("이름\t국어\t영어\t수학\t총점\t평균\t등수");
		for (int i = 0; i < count; i++) {
			System.out.printf("%s:%d\t%d\t%d\t%d\t%.2f\t  %d\n", names[i], kors[i], engs[i], mats[i], tots[i], avgs[i],
					ranks[i]);
		} // for

	}
2. int [] m = { 3, 92, 3, 40, 71, 91, 61, 92, 76, 71, 59, 54, 64, 48, 66, 92, 25, 20, 73, 37 };
   1)  m 배열의 max 값과  
   2)  max의 모든 index를 찾아서 배열에 저장 후 출력하는 코딩을 하세요. 
   [실행 결과]
   max = 92
   index =   1, 7, 15
public static void maxIndex() {
		int[] m = { 3, 92, 3, 40, 71, 91, 61, 92, 76, 71, 59, 54, 64, 48, 66, 92, 25, 20, 73, 37 };

		int max = IntStream.of(m).max().getAsInt();

		int count = 0;
		for (int i = 0; i < m.length; i++) {
			if (max == m[i]) {
				count++;
			}
		} // for
		int[] index = new int[count];
		for (int i = count = 0; i < m.length; i++) {
			if (max == m[i]) {
				index[count++] = i;
			}
		} // for

		System.out.printf("max= %d\n", max);
		System.out.println(Arrays.toString(index));
	}
3. int [] m =  {3,5,2,4,1};
   정수 4가 있는 위치에 100을 삽입하는 코딩을 하세요.   
public static void insertList() {
		int[] m = { 3, 5, 2, 4, 1 };
		int index = 3;
		int n = 100;
		int[] temp = new int[m.length + 1];
		for (int i = 0; i < m.length; i++) {
			if (index > i) {
				temp[i] = m[i];
			} else if (index <= i) {
				temp[i + 1] = m[i];
			}
		} // for
		temp[index] = n;
		m = temp;
		System.out.println(Arrays.toString(m));
	}