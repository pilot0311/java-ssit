   
1.  년도 year를 입력받아서 
    입력받은 년도의 1월~12월 까지의 마지막 날짜를 출력하는 코딩을 하세요. 
    ( 조건 : Date 클래스 사용 )
    ( 조건 : Scanner 클래스 사용 + try~with~resource문 사용)
    
    실행결과 예제)
    2005년 
    
	1월 : 31일
	2월 : 28일
	3월 : 31일
	4월 : 30일
	5월 : 31일
	6월 : 30일
	7월 : 31일
	8월 : 31일
	9월 : 30일
	10월 : 31일
	11월 : 30일
	12월 : 31일
	
package days20;

import java.util.Date;
import java.util.Scanner;

public class Ex01test {

	public static void main(String[] args) {
		
		
		try (Scanner sc = new Scanner(System.in)) {
		int year = 2023;   //sc.nextInt();
		int lastday = 0;
		System.out.println(year+"년");
		
		for (int i = 1; i <=12; i++) {
			lastday= getLastDay(year, i);
			System.out.printf("%d월 : %d일\n",i,lastday);
		} // for
	
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	} // main
	
	private static int getLastDay(int year, int month) {
		Date d = new Date(year - 1900, month, 1);
		int date = d.getDate() - 1;
		d.setDate(date);
		return d.getDate();
	}
	
}


2. java.util.Date 클래스를 사용하여 달력 그리기.
    
   [출력결과]ㅂ
   
              2023.08
   ┌─┬─┬─┬─┬─┬─┬─┐ 
   │일│월│화│수│목│금│토│
   ├─┼─┼─┼─┼─┼─┼─┤
   │  │  │ 1│ 2│ 3│ 4│ 5│  
   ├─┼─┼─┼─┼─┼─┼─┤
   │ 6│ 7│ 8│*9│10│11│12│  
   ├─┼─┼─┼─┼─┼─┼─┤
   │13│14│15│16│17│18│19│  
   ├─┼─┼─┼─┼─┼─┼─┤
   │20│21│22│23│24│25│26│  
   ├─┼─┼─┼─┼─┼─┼─┤
   │27│28│29│30│31│  │  │
   └─┴─┴─┴─┴─┴─┴─┘          
	 
	package days20;

import java.util.Date;

public class Extest {

    public static void main(String[] args) {
        int year = 2023;
        int month = 8;

        int dayOfWeek = getDayOfWeek(year, month, 1);
        int lastDay = getLastDay(year, month);

        Date d = new Date(year - 1900, month - 1, 1); // 2023.8.1

        int date = d.getDate() - dayOfWeek;
        d.setDate(date);

        System.out.printf("\t\t%d년 %02d월\n", year, month);
        System.out.println("┌─┬─┬─┬─┬─┬─┬─┐");
        System.out.println("│ 일 │ 월 │ 화│ 수│ 목 │ 금 │토 │");
        System.out.println("├────┼────┼────┼───┼────┼────┼───┤");

        for (int week = 0; week < 5; week++) {
            System.out.print("   │");

            for (int i = 0; i < 7; i++) {
                if (d.getMonth() + 1 != month || d.getDate() > lastDay) {
                    System.out.print("  │");
                } else {
                    System.out.printf("%2d│", d.getDate());
                }
                date = d.getDate() + 1;
                d.setDate(date);
            }
            System.out.println();
            if (d.getDate() > lastDay) {
                break;
            }

            System.out.println("├──┼──┼───┼───┼──┼──┼───┤");
        }

        System.out.println("└─┴─┴─┴─┴─┴─┴─┘");
    }

    private static int getLastDay(int year, int month) {
        Date d = new Date(year - 1900, month, 1);
        int date = d.getDate() - 1;
        d.setDate(date);
        return d.getDate();
    }

    private static int getDayOfWeek(int year, int month, int date) {
        Date d = new Date(year - 1900, month - 1, date);
        return d.getDay(); // 0(일)~6(토)
    }
}

3.개강일(2023.7.13 9:00:00)로 부터 오늘까지 지난 일수 계산을 하세요.. 

package days20;

import java.util.Date;

public class Ex03test {

	public static void main(String[] args) {
		Date d = new Date(2023-1900,7-1,13,9, 0);
		Date today = new Date();
		long ms = d.getTime();
		long todayMs = today.getTime();
		long day = (todayMs-ms)/(1000*60*60*24); // //(초*분*시간*하루)
		System.out.println(day+"일 지났음");
		
	} // main
}


4. 설문조사 기간이 
   시작일 2023.8.2    00:00:00
   종료일  2023.8.15  18:00:00
   일 때  오늘 현재 설문이 가능/불가능한지를 체크해서 출력하세요.
   package days20;

import java.util.Date;

public class Ex04test {

	public static void main(String[] args) {
		Date startDay = new Date(2023-1900,8-1,2);
		Date endDay = new Date(2023-1900,8-1,15,18,0);
		Date today = new Date();
		System.out.println(startDay.before(today)&&endDay.after(today)?"설문 조사 가능":"설문 조사 불가능");
	
	} // main
}

