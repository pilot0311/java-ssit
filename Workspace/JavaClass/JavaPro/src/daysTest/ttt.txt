생성자
1 메서드이다
2 메서드명==클래스명
3 임의로 호출 불가
4 메서드 오버로딩 가능
5 생성자를 1개도 만들지 ㅇ낳으면 컴파일러가 자동으로 기본 생성자 추가후 컴파일
6 리턴자료형 안씀
7 매개변수가 없는 생성자를 기본생성자라고함
8 생성자 상속 못함
9 객체생성 - 생성자 호출 - 필드 초기화
10 접근지정자 다 사용가능 기타 제어자 사용 안함

private 필드 선언 이유, 접근 방법
유효한 값만을 쓰기 위해서
생성자를 통해 전달 하거나 getter,setter사용
지역,인스턴스, 클래스 변수 초기화
지역 변수는 반드시 초기화를 해줘야 사용가능
인스턴스와 클래스는 따로 초기화 안해도 자동으로 자료형의 기본값으로 초기화
명시적 초기화
생성자 초기화
인스턴스 블록
스태틱 블록

초기화 순서
명시적 - 클래스 - 인스턴스 - 생성자

this,this()
this = 자기 자신의 주소값 가지는 참조 변수
용도
1. 멤버를 가르킴 ex) this.필드명 this.메서드명
2 생성자에서 또다른 생성자를 호출 할때의 this() 가장 앞라인에 와야함
3.단독으로 사용될 때의 this : 리턴값, 매개변수

클래스들간의 관계
1 has - a 관계(포함)
 ex) car engine = car클래스는 engine클래스를 가지고 있다(포함하고 있다)
2is - a 관게 (상속)
의존성 주입 2가지 방법
1 생성자를 통해서
2 setter를 통해서


명시적 초기화 = 결합도가 높은 코딩