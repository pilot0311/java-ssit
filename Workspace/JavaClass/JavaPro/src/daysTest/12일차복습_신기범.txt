1. 게임횟수를 입력받아서 로또 게임  
  ㄱ. int [][] lottos ;
package days13;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Scanner;

public class Ex01 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("몇 게임 할까요? : ");
		int[][]lottos = new int[sc.nextInt()][6];
		
		fill(lottos);
		disp(lottos);
		
	} // main

	private static void disp(int[][] lottos) {
		for (int i = 0; i < lottos.length; i++) {
			System.out.printf("%d번쨰 게임:  ",i );
			for (int j = 0; j < lottos[i].length; j++) {
				System.out.printf("[%d]",lottos[i][j]);
			} // for
			System.out.println();
		} // for
		
	}

	private static void fill(int[][] lottos) {
		
		
		
		for (int i = 0; i < lottos.length; i++) {
			int number;
			int index = 0;
			while (index<=5) {
				number = (int)(Math.random()*6)+1;
				if (!isDuplicateLotto(lottos,index,number,i)) {
					lottos[i][index++] = number;
				} //if
			}
			} // for
		} // for

	private static boolean isDuplicateLotto(int[][] lottos, int index, int number, int i) {
		for (int j = 0; j < index; j++) {
			if(lottos[i][j]==number)return true;
		} // for
		return false;
	}
		
	
}

2. 변수와 참조변수 설명
변수는 실제 값을 저장 하며 참조변수는 값이 저장되어 있는 주소를 저장하여 참조한다

3. int [][] m = new int[5][5];
   2차원 배열 m 을 선언 후 아래와 같이 채워 넣고 출력하는 코딩을 하세요
   fillM(m) 구현
   dispM(m) 구현
   
   [실행결과]    
	[01][02][03][04][10]
	[05][06][07][08][26]
	[09][10][11][12][42]
	[13][14][15][16][58]
	[28][32][36][40][136]  
package days13;

public class Ex02Test {

	public static void main(String[] args) {
		int[][] m = new int[5][5];
		fillM(m);
		dispM(m);
	} // main

	private static void fillM(int[][] m) {
		int sum2 = 0;
		for (int i = 0; i < m.length; i++) {
			int sum = 0;
			for (int j = 0; j < m[i].length; j++) {

				if (j != 4) {
					m[i][j] = 4 * i + j + 1;

					sum += m[i][j];
				} else if (j == 4) {
					m[i][j] = sum;
				}
			}

		} // for
	} // for

	private static void dispM(int[][] m) {
		for (int i = 0; i < m.length; i++) {
			for (int j = 0; j < m[i].length; j++) {
				System.out.printf("[%02d]", m[i][j]);
			} // for
			System.out.println();
		} // for

	}
}

4. OOP에 대해서 설명하세요.	
객체 지향 설계로 프로그램 설계 방법 중 하나이다