--[데이터베이스 (DB)모델링]
1단계 : 요구 사항 분석 -> 요구 사항 명세서
2단계 : 개념적 모델링(설계) -> E - R 다이어그램
3단계 : 논리적 모델링(설계) -> 릴레이션 스키마
                            정규화
4단계 : 물리적 모델링(설계) -> 물리적 스키마
                            DBMS, 역정규화,
                            인덱스
5단계 : 구현

2단계 : 개념적 모델링
    1. 요구 사항 명세서를 기반으로 데이터 요소(ENTITY==개체) 추출
                                ㄴ 개체의 속성(Attribute) 추출
                                    ㄴ 키(PK) 속성 선별
    2. 개체(ENTITY)간의 관계를 파악
      -> ER - diagram 작성
      
      ㄱ. 실체=개체=Entity
        - 업무 수행을 위해 데이터로 관리 되어지는 사람, 사물, 장소, 사건등을 실체
        - 이때 구축하고자 하는 업무의 목적, 범위, 전략에 따라 데이터로 관리되어지는
            항목을 파악
          예) 회원(E): 주소, 직업, 연봉
        - 실체는 학생, 회원, 교수 등과 물리적으로 존재하는 유형
        - 학과, 과목, 등의 개념적으로 존재하는 유형
        - 실체를 파악하는 요령: 
            가장 중요한 것: 관련 업무의 지식
      ㄴ. 속성 추출
        - 속성: 실체의 저장할 필요가 있는 정보
        - 속성은 실체 성질 분류 수량 상태 특징 등의 실체의 세부 항목
        - 속성은 10개 내외 적당 .... X
        - 속성은 컬럼으로 정의
        예) 회원 실체
            ㄴ 속성: id,이름,주소,연락처....
            부서 실체
                ㄴ 부서번호,부서명,지역명...
        - 속성의 유형
            1) 기초속성: 원래 갖고 있는 속성
                학생(E): 학번,이름, 등등
            2) 추출속성: 기초 속성으로 부터 가공처리해서 얻을 수 있는 속성
                예) 회원(E) - 나이속성X
                             주민등록번호 -> 나이 성별 등등
            3) 설계속성: 실제로 존재하지는 않으나 시스템의 효율성을 위해서 설계자가 임의로 부여하는 속성
                예) 주문(E)
                    주문번호, 고객, 상품, 일자, 수량, 금액
                    주문상태: 결재완료,배송정보, 등등
        - 속성 도메인 설정
            ㄴ 속성이 가질 수 있는 값들의 범위, 제약조건, 특성등 전체적으로 정의하는 것
        - 도메인 설정은 추후 개발 및 실체를 데이터베이스로 생성할 때 유용하게 사용된다
        - 도메인 정의 시에는
            ㄴ 속성의 이름
            ㄴ 자료형
            ㄴ 크기
            ㄴ 형식
            ㄴ 허용되는 값의 제약조건
            ㄴ 유일성
            ㄴ 유효값
            ㄴ 초기값
            등의 사항을 파악한다
        - 도메인 무결성
        
    2. 식별자(identifier)
      - 식별자: 한 실체 내에서 각각의 인스턴스를 구분할 수 있는 단일 속성 또는속성 그룹
      - 식별자가 없으면 수정, 삭제 문제생김
      - 식별자의 종류
        (1) 후보키(candidate key): 실체를 구분할 수 있는 속성
            예) 사원 -사원 번호, 주민번호,이메일,전화번호 등등
        (2) 기본키(primary key): 후보키 중에 가장 적합한 키
            업무적 활용, 크기 등을 파악해 결정
            예) 활용도,크기 : 사원번호
        (3) 대체키(alternate key) = 후보키 - 기본키
            - index(인덱스)로 활용
        (4) 복합키(composite key): 하나의 속성으로 기본키가 될 수 없는 경우 둘 이상의 속성을 묶어서 식별자(PK)로 정의한 경우
            - 복합키 구성시 고려 사항
                ㄴ 어떤 컬럼을 먼저 둘 것인가 고려: 복합키 중에 먼저 오는 칼럼에 index,unique 이 적용되기 떄문에
                예) [사원+날짜 '급여 지급 내역'...]
                [급여지급일자,사원번호],지급일자,급여액...
                202301       1111   25      ...      
                202301       1111   25      ...
                202301       1111   25      ...
                202301       1111   23      ...
                [급여지급일자+사원번호]
                [사원번호+급여지급일자]
        (5) 대리키(surrogate key): 식별자가 너무 길거나  여러개의 복합키로 구성된 경우
                                    -> 인위적으로 역정규화해서 속성(식별자)추가...
        (6) 관계(relational):실체와 실체 간의 업무의 연관성
            예) 학생    수강관계     강의
                고객    주문관계    상품
            1) 실체 [직사각형]
            2) 속성 (타원)
            3) 식별자 _____
            4) 관계  <마름모>
            - 관계가 있는 두 실체는 실선으로 연결 하고 관계를 부여
            - 관계 차수: 
             남편실체 아내실체  1:1
             부서 소속 사원    1:N
             고객 주문 상품    N:M 
            - 선택성 표시
            
-- 3단계 : 논리적 모델링
    E-R 다이어그램 작성 
    -> 5가지 규칙(매핑룰,Mapping Rule)
    : 개념적 모델링에서 도출된 개체 타입과 관계타입의 테이블 정의   
    -> 릴레이션(테이블) 스키마 변환
    -> 이상현상 문제가 발생
    -> 정규화 작업
           
    -- 용어 정리 --
    1) 부모테이블, 자식테이블
        기준 : 관계의 주체
    예) 고객테이블 -<주문>- 상품테이블
          부모                자식
        기준 : 관계형성 시기
    예) 사원테이블 -<소속>- 부서테이블
            자식              부모
        부서가 먼저 생성(정의)된 후 사원의 부서를 정의할 수 있기 때문에
    2) 기본키(PK)   참조키
       외래키(FK)
    3) 식별관계
        부모T(PK) -> 자식T(FK,PK)
        book        danga
        b_id(PK)    b_id(FK,PK)
       비식별관계
        부모T(PK) -> 자식T(FK) PK X 일반칼럼
    
    -- 릴레이션 스키마 변환 규칙(매핑룰,Mapping Rule)
    규칙1: 모든 개체는 릴레이션으로 변환한다
    규칙2: 다대다(n:m) 관계는 릴레이션으로 변환한다
    규칙3: 일대다(1:n) 관계는 외래키로 표현한다
    규칙4: 일대일(1:1) 관계를 외래키로 표현한다
        
        남
        1 홍길동
        2 신종혁
        여자
        1 홍길여
        2 신종여
        
        혼인T PK FK 결혼사날짜, 결혹식 ...
           남자  여자
    
    규칙5: 다중 값 속성은 릴레이션으로 변환한다
        예) 고객T
            id,이름 , 취미: 운동,영화,독서....
        
        
        정규화 필요성 
        1) 이상현상을 해결하기 위해 -> 관련 있는 속성들로만 릴레이션을 구성
                ㄴ 이상현상 종류: 삽입이상,갱신이상,삭제이상
    1) 함수적 종속성
    하나의 릴레이션을 구성하는 속성들의 부분 집합을 X와 Y라 할 때, 
    어느 시점에서든 릴레이션 내의 모든 투플을 대상으로 한 X 값에 대한 Y 값이 항상 하나면 "Y가 X에 함수적으로 종속되어 있다"고 한다. 
    함수 종속 관계는 X → Y로 표현하고 X를 결정자, Y를 종속자라고 한다.
    
함수적 종속성 종류
    1) 완전 함수적 종속성
    2) 부분 함수적 종속성   
    3) 이행 함수적 종속
    
    여러개의 속성이 모여서 하나의 기본키를 이룰 때 (복합키)
    복합키 전체에 어떤 속성이 종속적일때 "완전 함수적 종속"이라고 한다
    
    완전 함수적 종속이 아니면 "부분 함수적 종속" 이라고 한다
    
    예) 테이블                        제2 정규화) 부분 함수적 종속을 제거
         복합키       완전함수적종속   부분함수적종속   부분함수적종속
    [고객ID]+[이벤트ID]   당첨여부,      고객명,        등급
     apple      E001        Y         홍길동         gold


      이행 함수적 종속  
    결정자     종속자 
       X   →   Y 
       Y는 X의 함수적 종속이다
       이행 함수적 종속
        X → Y , Y → Z 일때 X → Z

-- 정규화(Normalization)
함수 종속성을 이용하여 릴레이션을 연관성이 있는 속성들로만 구성되도록 분해해서,
이상 현상이 발생하지 않는 올바른 릴레이션으로 만들어 나가는 과정을 정규화(normalization)라고 한다. 
정규화의 기본 목표는 관련이 없는 함수 종속성은 별개의 릴레이션으로 표현하는 것이다.

--정규형(Normal Form, NF): 릴레이션이 정규화된 정도

제 1정규형(1NF)
릴레이션에 속한 모든 속성의 도메인이 원자 값(atomic value)으로만 구성되어 있으면 제1정규형에 속한다.

예) 고객T
id(PK): 취미: 운동,영화,독서....
 hong,  운동
 hong,  영화
 hong,  독서
 -> id(PK)이기에 이런식으로 불가능 
 -> 그래서 아래처럼 테이블나누어서 정규화
 회원테이블
 ID   이름
 hong dwsa
 
취미 테이블
회원ID(FK) 취미번호(PK) 취미
 hong       1         운동
 hong       2         영화
 hong       3         독서
회원 N:M 취미

제 2정규형(2NF)
릴레이션이 제1정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 완전 함수 종속되면 제2정규형에 속한다.
-> 부분 함수 종속 제거
주의: 분해된 릴레이션들을 자연 조인하여 분해 전의 릴레이션으로 다시 복원할 수 있어야 한다는 것

        복합키       완전함수적종속   부분함수적종속   부분함수적종속
    [고객ID]+[이벤트ID]   당첨여부,      고객명,        등급
     apple      E001        Y         홍길동         gold
-----
    -이벤트T-
        복합키       완전함수적종속   
    [고객ID]+[이벤트ID]   당첨여부
     apple      E001        Y 
    -회원T-
    [고객ID]    고객명,    등급

제 3정규형(3NF)
릴레이션이 제2정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 이행적 함수 종속이 되지 않으면 제3정규형에 속한다.
-> 이행적 함수 종속 제거

고객아이디(PK)     등급    할인율  -- 고객아이디 -> 등급, 등급->할인율, 고객아이디->할인율 인 이행적 함수 종속
dwsa            silver  5%
->이행적 함수 종속 제거하기 위해 분해
고객T
고객아이디(PK)     등급
dwsa            silver
등급T
등급(PK)    할인율
silver      5%

보이스/코드 정규형(BCNF)
릴레이션의 함수 종속 관계에서 모든 결정자가 후보키이면 보이스/코드 정규형에 속한다.
    복합키(PK)결정자
[고객아이디+인터넷강좌]   담당강사번호
    X        Y             Z
    (X+Y)->Z,   Z->Y :  담당강사번호 속성이 후보키가 아님에도 인터넷강좌 속성을 결정하므로 강좌신청 릴레이션은 보이스/코드 정규형 아님
    
제 4정규형(4NF)
제 5정규형(5NF)













